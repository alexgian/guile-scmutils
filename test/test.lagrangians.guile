#!/usr/bin/guile \
-l ../load.scm -s 
!#

; replace + * etc with generic operators
(eval-when (load compile eval)
	   (set-current-module generic-environment))

(define q (lambda (t) (up ((literal-function 'x) t)  
			  ((literal-function 'y) t)  
			  ((literal-function 'z) t))))

(define ((L-central-rectangular m V) local)
  (let ((q (coordinate local))
        (v (velocity local)))
    (- (* 1/2 m (square v))
       (V (sqrt (square q))))))

(show-expression
 (((Lagrange-equations
    (L-central-rectangular 'm (literal-function 'V)))
   q)
  't))


;;;;;;;;;; polar co-ords

(define polarq (lambda (t) (up ((literal-function 'r) t)  
			  ((literal-function 'phi) t))))

(define ((L-central-polar m V) local)
  (let ((q (coordinate local))
        (qdot (velocity local)))
    (let ((r (ref q 0))
          (phi (ref q 1))
          (rdot (ref qdot 0))
          (phidot (ref qdot 1)))
      (- (* 1/2 m
           (+ (square rdot)
              (square (* r phidot))) )
         (V r)))))

(show-expression
 (((Lagrange-equations
    (L-central-polar 'm (literal-function 'V)))
   polarq)
  't))
